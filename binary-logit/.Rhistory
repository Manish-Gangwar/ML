shiny::runApp()
runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ML/regression-tree')
runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ML/decision-tree')
runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ML/regression-tree')
runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ML/regression-tree')
runApp()
shiny::runApp('../decision-tree-random-forest')
runApp()
runApp()
runApp('../decision-tree-random-forest')
runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ML/decision-tree')
runApp()
runApp('../decision-tree-random-forest')
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ML/decision-tree')
runApp()
runApp()
runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ML/ols-regression')
shiny::runApp()
shiny::runApp()
# clear all variables
rm(list=ls())
# check folder
getwd()
# Read the data for training and test
PregnancyData<-read.csv("S6_Pregnancy.csv")
PregnancyData.Test<-read.csv("S6_Pregnancy_Test.csv")
# Get a feel for the data
str(PregnancyData)
table(PregnancyData$PREGNANT)
table(PregnancyData.Test$PREGNANT)
# Running the logit model
clean.PregnancyData <- PregnancyData[, -c(1)]
Pregnancy.lm<-glm(PREGNANT~.,data=clean.PregnancyData,family=binomial("logit"))
summary(Pregnancy.lm)
#Making predictions with the model
PregnancyData.Test.lm.PREDS<-predict(Pregnancy.lm,PregnancyData.Test,type="response")
#Summary of predictions
summary(PregnancyData.Test.lm.PREDS)
#Making prediction for 5 observations in the data
t(PregnancyData.Test[1:4,])
t(PregnancyData.Test.lm.PREDS[1:4])
#t(sort(PregnancyData.Test.lm.PREDS))
# Install the needed packages
try(require(ROCR))||install.packages("ROCR")
#try(require(xlsx))||install.packages("xlsx")
library(ROCR)
#Creating ROC Curves
pred.lm<-prediction(PregnancyData.Test.lm.PREDS,PregnancyData.Test$PREGNANT)
perf.lm<-performance(pred.lm,"tpr", "fpr")
#roc_graph<-cbind(perf.lm@x.values[[1]],perf.lm@y.values[[1]],perf.lm@alpha.values[[1]]);write.csv(roc_graph, file="roc_graph1.csv")
auc_ROCR <- performance(pred.lm, measure = "auc")
plot(perf.lm,main = c("AUC: ", auc_ROCR@y.values[[1]]))
#lines(x = c(0,1), y = c(0,1))
abline(a=0,b=1)
#unbalanced data
#wt <- ifelse(PregnancyData$PREGNANT == 1,mean(PregnancyData$PREGNANT == 0)/mean(PregnancyData.Test$PREGNANT == 1),1)
#Pregnancy.lm2<-glm(PREGNANT~.,data=PregnancyData,weight=wt,family=binomial("logit"))
runApp('D:/Indian School of Business/VishalSiram Anil - R shiny App/Final Mlogit Long')
runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ML/decision-tree-CART')
runApp()
runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ML/Mlogit Long')
runApp()
if (!require("caret")) {install.packages("caret")}
library(caret)
runApp()
runApp()
runApp()
runApp()
runApp()
